X[i,1:5] = c(1,1,-1,1,1) + rnorm(5,sd=0.2)
}else if(label==4){
X[i,1:5] = c(1,-1,1,1,1) + rnorm(5,sd=0.2)
}else{
X[i,1:5] = c(-1,1,1,1,1) + rnorm(5,sd=0.2)
}
}
for(i in 1:dim(X)[2]){
X[,i]=(X[,i]-mean(X[,i]))/sd(X[,i])
}
p <- dim(X)[2]
w = rep(1/p,p)
L <- coo_desc(X,X,w,100,s=5,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w = rep(1/p,p)
L <- coo_desc(X,X,w,100,s=2,lambda=0.2,w_sparse=1,update_phi_every=1)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
L[[1]]
L[[2]]
X <- matrix(rnorm(100*50),nrow=100,ncol=50)
labels <- rep(0,100)
for(i in 1:100){
label  <-  sample(c(1,2,3,4,5),1)
labels[i] <- label
if(label==1){
X[i,1:5] = c(1,1,1,1,-1) + rnorm(5,sd=0.25)
}else if(label==2){
X[i,1:5] = c(1,1,1,-1,1) + rnorm(5,sd=0.25)
}else if(label==3){
X[i,1:5] = c(1,1,-1,1,1) + rnorm(5,sd=0.25)
}else if(label==4){
X[i,1:5] = c(1,-1,1,1,1) + rnorm(5,sd=0.25)
}else{
X[i,1:5] = c(-1,1,1,1,1) + rnorm(5,sd=0.25)
}
}
for(i in 1:dim(X)[2]){
X[,i]=(X[,i]-mean(X[,i]))/sd(X[,i])
}
p <- dim(X)[2]
w = rep(1/p,p)
L <- coo_desc(X,X,w,100,s=5,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w = rep(1/p,p)
L <- coo_desc(X,X,w,100,s=2,lambda=0.2,w_sparse=1,update_phi_every=1)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
X <- matrix(rnorm(100*50),nrow=100,ncol=50)
labels <- rep(0,100)
for(i in 1:100){
label  <-  sample(c(1,2,3,4,5),1)
labels[i] <- label
if(label==1){
X[i,1:5] = c(1,1,1,1,-1) + rnorm(5,sd=0.3)
}else if(label==2){
X[i,1:5] = c(1,1,1,-1,1) + rnorm(5,sd=0.3)
}else if(label==3){
X[i,1:5] = c(1,1,-1,1,1) + rnorm(5,sd=0.3)
}else if(label==4){
X[i,1:5] = c(1,-1,1,1,1) + rnorm(5,sd=0.3)
}else{
X[i,1:5] = c(-1,1,1,1,1) + rnorm(5,sd=0.3)
}
}
for(i in 1:dim(X)[2]){
X[,i]=(X[,i]-mean(X[,i]))/sd(X[,i])
}
p <- dim(X)[2]
w = rep(1/p,p)
L <- coo_desc(X,X,w,100,s=5,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w = rep(1/p,p)
L <- coo_desc(X,X,w,100,s=2,lambda=0.2,w_sparse=1,update_phi_every=1)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
X <- matrix(rnorm(1000*22),nrow=1000,ncol=22)
labels <- rep(0,1000)
for(i in 1:1000){
label  <-  sample(c(1,2,3,4),1)
labels[i] <- label
if(label==1){
X[i,1:2] = c(1,1) + rnorm(2,sd=0.25)
}else if(label==2){
X[i,1:2] = c(1,-1) + rnorm(2,sd=0.25)
}else if(label==3){
X[i,1:2] = c(-1,1) + rnorm(2,sd=0.25)
}else if(label==4){
X[i,1:2] = c(-1,-1) + rnorm(2,sd=0.25)
}
}
or(i in 1:dim(X)[2]){
X[,i]=(X[,i]-mean(X[,i]))/sd(X[,i])
}
p <- dim(X)[2]
w = rep(1/p,p)
L <- coo_desc(X,X,w,100,s=5,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
for(i in 1:dim(X)[2]){
X[,i]=(X[,i]-mean(X[,i]))/sd(X[,i])
}
p <- dim(X)[2]
w = rep(1/p,p)
L <- coo_desc(X,X,w,100,s=5,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
X <- matrix(rnorm(1000*32),nrow=1000,ncol=32)
labels <- rep(0,1000)
for(i in 1:1000){
label  <-  sample(c(1,2,3,4),1)
labels[i] <- label
if(label==1){
X[i,1:2] = c(1,1) + rnorm(2,sd=0.25)
}else if(label==2){
X[i,1:2] = c(1,-1) + rnorm(2,sd=0.25)
}else if(label==3){
X[i,1:2] = c(-1,1) + rnorm(2,sd=0.25)
}else if(label==4){
X[i,1:2] = c(-1,-1) + rnorm(2,sd=0.25)
}
}
for(i in 1:dim(X)[2]){
X[,i]=(X[,i]-mean(X[,i]))/sd(X[,i])
}
p <- dim(X)[2]
w = rep(1/p,p)
L <- coo_desc(X,X,w,100,s=5,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w = rep(1/p,p)
L <- coo_desc(X,X,w,100,s=2,lambda=0.2,w_sparse=1,update_phi_every=1)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w = rep(1/p,p)
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=5,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=2,lambda=0.2,w_sparse=1,update_phi_every=1)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=2,lambda=0.5,w_sparse=1,update_phi_every=1)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w = rep(1/p,p)
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=5,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w = rep(1/p,p)
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=5,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=2,lambda=0.3,w_sparse=1,update_phi_every=1)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w = rep(1/p,p)
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=10,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
X <- matrix(rnorm(1000*12),nrow=1000,ncol=12)
labels <- rep(0,1000)
for(i in 1:1000){
label  <-  sample(c(1,2,3,4),1)
labels[i] <- label
if(label==1){
X[i,1:2] = c(1,1) + rnorm(2,sd=0.25)
}else if(label==2){
X[i,1:2] = c(1,-1) + rnorm(2,sd=0.25)
}else if(label==3){
X[i,1:2] = c(-1,1) + rnorm(2,sd=0.25)
}else if(label==4){
X[i,1:2] = c(-1,-1) + rnorm(2,sd=0.25)
}
}
for(i in 1:dim(X)[2]){
X[,i]=(X[,i]-mean(X[,i]))/sd(X[,i])
}
p <- dim(X)[2]
w = rep(1/p,p)
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=10,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=2,lambda=0.3,w_sparse=1,update_phi_every=1)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matr
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w = rep(1/p,p)
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=5,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=2,lambda=0.3,w_sparse=1,update_phi_every=1)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
X <- matrix(rnorm(1000*12),nrow=1000,ncol=12)
labels <- rep(0,1000)
for(i in 1:1000){
label  <-  sample(c(1,2,3,4),1)
labels[i] <- label
if(label==1){
X[i,1:2] = c(1,1) + rnorm(2,sd=0.25)
}else if(label==2){
X[i,1:2] = c(1,-1) + rnorm(2,sd=0.25)
}else if(label==3){
X[i,1:2] = c(-1,1) + rnorm(2,sd=0.25)
}else if(label==4){
X[i,1:2] = c(-1,-1) + rnorm(2,sd=0.25)
}
}
for(i in 1:dim(X)[2]){
X[,i]=(X[,i]-mean(X[,i]))/sd(X[,i])
}
p <- dim(X)[2]
w = rep(1/p,p)
L <- coo_desc(X,X,w,100,s=2,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
X <- matrix(rnorm(1000*22),nrow=1000,ncol=22)
labels <- rep(0,1000)
for(i in 1:1000){
label  <-  sample(c(1,2,3,4),1)
labels[i] <- label
if(label==1){
X[i,1:2] = c(1,1) + rnorm(2,sd=0.25)
}else if(label==2){
X[i,1:2] = c(1,-1) + rnorm(2,sd=0.25)
}else if(label==3){
X[i,1:2] = c(-1,1) + rnorm(2,sd=0.25)
}else if(label==4){
X[i,1:2] = c(-1,-1) + rnorm(2,sd=0.25)
}
}
for(i in 1:dim(X)[2]){
X[,i]=(X[,i]-mean(X[,i]))/sd(X[,i])
}
p <- dim(X)[2]
w = rep(1/p,p)
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=2,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=2,lambda=0.3,w_sparse=1,update_phi_every=1)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
c
c
plot(h)
L[[1]]
L[[2]]
p <- dim(X)[2]
w <- runif(p)
w <- w/sum(w)
w = rep(1/p,p)
L <- coo_desc(X,X,w,100,s=2,lambda=0.3,w_sparse=1,update_phi_every=1)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
plot(h)
L[[2]]
L[[2]]
L[[1]]
library(devtools)
load_all()
library(dynamicTreeCut)
library(sparcl)
library(igraph)
X <- matrix(rnorm(1000*50),nrow=1000,ncol=50)
labels <- rep(0,1000)
for(i in 1:1000){
label  <-  sample(c(1,2,3,4,5),1)
labels[i] <- label
if(label==1){
X[i,1:5] = c(1,1,1,1,-1) + rnorm(5,sd=0.1)
}else if(label==2){
X[i,1:5] = c(1,1,1,-1,1) + rnorm(5,sd=0.1)
}else if(label==3){
X[i,1:5] = c(1,1,-1,1,1) + rnorm(5,sd=0.1)
}else if(label==4){
X[i,1:5] = c(1,-1,1,1,1) + rnorm(5,sd=0.1)
}else{
X[i,1:5] = c(-1,1,1,1,1) + rnorm(5,sd=0.1)
}
}
# X <- matrix(rnorm(1000*22),nrow=1000,ncol=22)
# labels <- rep(0,1000)
# for(i in 1:1000){
#   label  <-  sample(c(1,2,3,4),1)
#   labels[i] <- label
#   if(label==1){
#     X[i,1:2] = c(1,1) + rnorm(2,sd=0.25)
#   }else if(label==2){
#     X[i,1:2] = c(1,-1) + rnorm(2,sd=0.25)
#   }else if(label==3){
#     X[i,1:2] = c(-1,1) + rnorm(2,sd=0.25)
#   }else if(label==4){
#     X[i,1:2] = c(-1,-1) + rnorm(2,sd=0.25)
#   }
# }
for(i in 1:dim(X)[2]){
X[,i]=(X[,i]-mean(X[,i]))/sd(X[,i])
}
p <- dim(X)[2]
w = rep(1/p,p)
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=5,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
X <- matrix(rnorm(1000*100),nrow=1000,ncol=100)
labels <- rep(0,1000)
for(i in 1:1000){
label  <-  sample(c(1,2,3,4,5),1)
labels[i] <- label
if(label==1){
X[i,1:5] = c(1,1,1,1,-1) + rnorm(5,sd=0.1)
}else if(label==2){
X[i,1:5] = c(1,1,1,-1,1) + rnorm(5,sd=0.1)
}else if(label==3){
X[i,1:5] = c(1,1,-1,1,1) + rnorm(5,sd=0.1)
}else if(label==4){
X[i,1:5] = c(1,-1,1,1,1) + rnorm(5,sd=0.1)
}else{
X[i,1:5] = c(-1,1,1,1,1) + rnorm(5,sd=0.1)
}
}
for(i in 1:dim(X)[2]){
X[,i]=(X[,i]-mean(X[,i]))/sd(X[,i])
}
p <- dim(X)[2]
w = rep(1/p,p)
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=5,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w <- runif(p)
w <- w/sum(w)
w = rep(1/p,p)
L <- coo_desc(X,X,w,100,s=2,lambda=0.3,w_sparse=1,update_phi_every=1)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w <- runif(p)
w <- w/sum(w)
#w = rep(1/p,p)
L <- coo_desc(X,X,w,100,s=2,lambda=0.3,w_sparse=1,update_phi_every=1)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w = rep(1/p,p)
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=5,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w = rep(1/p,p)
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=10,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w <- runif(p)
w <- w/sum(w)
#w = rep(1/p,p)
L <- coo_desc(X,X,w,100,s=2,lambda=0.3,w_sparse=1,update_phi_every=1)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w = rep(1/p,p)
w <- runif(p)
w <- w/sum(w)
L <- coo_desc(X,X,w,100,s=5,lambda=0.2,w_sparse=0,update_phi_every=1,k=5)
#L <- bcc(X,X,lambda=0.3,gamma=100,tmax=100)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
p <- dim(X)[2]
w <- runif(p)
w <- w/sum(w)
#w = rep(1/p,p)
L <- coo_desc(X,X,w,100,s=2,lambda=0.3,w_sparse=1,update_phi_every=1)
M <- L[[1]]
h <- hclust(dist(M),method = 'average')
c <- cutreeDynamic(h,distM = as.matrix(dist(M)),minClusterSize=1,verbose=0)
compare(labels,c,'adjusted.rand')
